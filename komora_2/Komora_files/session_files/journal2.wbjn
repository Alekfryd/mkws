# encoding: utf-8
# 2022 R1
SetScriptVersion(Version="22.1.217")
system1 = GetSystem(Name="FFF")
geometry1 = system1.GetContainer(ComponentName="Geometry")
geometryProperties1 = geometry1.GetGeometryProperties()
geometryProperties1.GeometryImportAnalysisType = "AnalysisType_2D"
meshComponent1 = system1.GetComponent(Name="Mesh")
meshComponent1.Update(AllDependencies=True)
setupComponent1 = system1.GetComponent(Name="Setup")
setupComponent1.Refresh()
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='(%py-exec "preferences.fixState()")')
setup1.SendCommand(Command="(%py-exec \"preferences.setState({r'Appearance': None,r'GPUApp': None,r'General': None,r'Graphics': None,r'MatProApp': None,r'MeshingWorkflow': None,r'Navigation': None,r'PrjApp': None,r'Simulation': None,r'TurboWorkflow': None,})\")")
setup1.SendCommand(Command='/file/set-tui-version "22.1"(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions|Fluid"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Mesh Display*fl_mesh_svg_graphics_toolbar")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1 2 3 4 5 6 7 8))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton1(Scale)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Scale Mesh*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton3(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Mesh Display*fl_mesh_svg_graphics_toolbar")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Mesh Display*fl_mesh_svg_graphics_toolbar")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="/mesh/check-verbosity 0")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton5(  Quality)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuQuality*Evaluate Mesh Quality")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton5(  Quality)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuQuality*Improve Mesh Quality...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Improve Mesh*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Improve Mesh*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Mesh Interfaces"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*List2(Zone)")')
geometry1.Edit(IsSpaceClaimGeometry=True)
meshComponent1.UpdateUpstreamComponents()
meshComponent1.Update(AllDependencies=True)
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '())(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")(wb-check-upstream-change)(cx-gui-do cx-activate-item \"Question*OK\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air_inlet (mass-flow-inlet, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air_inlet (mass-flow-inlet, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air_inlet (mass-flow-inlet, id=7)"))(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame12*PushButton2(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Mesh"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Contours*New...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setupComponent1.Update(AllDependencies=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='(%py-exec "preferences.fixState()")')
setup1.SendCommand(Command="(%py-exec \"preferences.setState({r'Appearance': None,r'GPUApp': None,r'General': None,r'Graphics': None,r'MatProApp': None,r'MeshingWorkflow': None,r'Navigation': None,r'PrjApp': None,r'Simulation': None,r'TurboWorkflow': None,})\")")
setup1.SendCommand(Command='/file/set-tui-version "22.1"')
mesh1 = system1.GetContainer(ComponentName="Mesh")
mesh1.Edit()
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='(%py-exec "preferences.fixState()")')
setup1.SendCommand(Command="(%py-exec \"preferences.setState({r'Appearance': None,r'GPUApp': None,r'General': None,r'Graphics': None,r'MatProApp': None,r'MeshingWorkflow': None,r'Navigation': None,r'PrjApp': None,r'Simulation': None,r'TurboWorkflow': None,})\")")
setup1.SendCommand(Command='/file/set-tui-version "22.1"(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Mesh Display*fl_mesh_svg_graphics_toolbar")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 3 5 6 7 8 9 10))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1 2 3 4 5 6 7 8 9 10))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions\"))(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '( 0))(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '( 1))(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '( 2))(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '( 0))(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*Table3*DropDownList2(Type)\" '( 5))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*Table3*DropDownList2(Type)")(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)')
setup1.SendCommand(Command="(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"0.350625\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '( 1))(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*List2(Zone)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '( 1))(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*Table3*DropDownList2(Type)\" '( 5))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*Table3*DropDownList2(Type)")(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)')
setup1.SendCommand(Command="(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"0.47685\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '( 2))(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*Table3*DropDownList2(Type)\" '( 5))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*Table3*DropDownList2(Type)")(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)')
setup1.SendCommand(Command="(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"0.20625\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame12*PushButton2(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-contour-1*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Models"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Models|Viscous (Standard k-e, Standard Wall Fn)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Models|Viscous (Standard k-e, Standard Wall Fn)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Models|Viscous (Standard k-e, Standard Wall Fn)"))(cx-gui-do cx-set-toggle-button2 "Viscous Model*Table1*ToggleBox1(Model)*k-omega (2 eqn)" #t)(cx-gui-do cx-activate-item "Viscous Model*Table1*ToggleBox1(Model)*k-omega (2 eqn)")(cx-gui-do cx-activate-item "Viscous Model*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Physics)*Table1*Table3(Models)*PushButton6(Species)")(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame3" 0)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame3" 1)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame3" 0)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame3" 2)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame3" 0)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 0)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 1)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 0)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 2)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 0)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 3)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 0)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 4)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 0)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 5)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 0)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 6)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 0)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table6(Solution Advancement)*Table1*PushButton1(Calculate)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Information*OK\")(cx-use-window-id 51)(cx-gui-do cx-set-list-selections \"Table1*Frame4(Number Format)*DropDownList1(Type)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Table1*Frame4(Number Format)*DropDownList1(Type)")')
setup1.SendCommand(Command='(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)\"))(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 6)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 7)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 8)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table14*ExpressionEntry1(Supersonic/Initial Gauge Pressure)\" '(\"0\" . 0))(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"0.02109642857\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Reference Values"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Reference Values"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Reference Values\"))(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)\"))(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 1)(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame2(Thermal)*Table1*Table1*ExpressionEntry1(Total Temperature)\" '(\"600\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)\"))(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 1)(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame2(Thermal)*Table1*Table1*ExpressionEntry1(Total Temperature)\" '(\"600\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air3 (mass-flow-inlet, id=10)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air3 (mass-flow-inlet, id=10)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|air3 (mass-flow-inlet, id=10)\"))(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 1)(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame2(Thermal)*Table1*Table1*ExpressionEntry1(Total Temperature)\" '(\"600\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)\"))(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 3)(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame4(Species)*Table1*Table2(Species Mass Fractions)*Table1*ExpressionEntry1(ch4)\" '(\"0\" . 0))(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame4(Species)*Table1*Table2(Species Mass Fractions)*Table2*ExpressionEntry1(o2)\" '(\"0.23\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)\"))(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 3)(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame4(Species)*Table1*Table2(Species Mass Fractions)*Table1*ExpressionEntry1(ch4)\" '(\"0\" . 0))(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame4(Species)*Table1*Table2(Species Mass Fractions)*Table2*ExpressionEntry1(o2)\" '(\"0.23\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air3 (mass-flow-inlet, id=10)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air3 (mass-flow-inlet, id=10)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|air3 (mass-flow-inlet, id=10)\"))(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 3)(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame4(Species)*Table1*Table2(Species Mass Fractions)*Table2*ExpressionEntry1(o2)\" '(\"0.23\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame12*PushButton2(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Reference Values"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Reference Values"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Reference Values\"))(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Mesh Display*fl_mesh_svg_graphics_toolbar")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 2))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 1 2))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Mesh Display*fl_mesh_svg_graphics_toolbar")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1 2 3 4 5 6 7 8))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Copy*copytoclipboard")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)\"))(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"0.47685\" . 0))(cx-gui-do cx-set-list-selections \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList15(Direction Specification Method)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList15(Direction Specification Method)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*DropDownList1(Specification Method)\" '( 1))(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*DropDownList1(Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*DropDownList1(Specification Method)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*DropDownList1(Specification Method)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Reference Values"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Reference Values"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Reference Values\"))(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton1(OK)")(cx-gui-do cx-enable-apply-button "Mass-Flow Inlet")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)\"))(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-set-list-selections \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList15(Direction Specification Method)\" '( 1))(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList15(Direction Specification Method)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*DropDownList1(Specification Method)\" '( 0))(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*DropDownList1(Specification Method)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*DropDownList1(Specification Method)\" '( 1))(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*DropDownList1(Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*ExpressionEntry9(Turbulent Intensity)\" '(\"0.05\" . 0))(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*ExpressionEntry10(Turbulent Length Scale)\" '(\"1\" . 0))(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*ExpressionEntry10(Turbulent Length Scale)\" '(\"1\" . 0))(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*ExpressionEntry9(Turbulent Intensity)\" '(\"0.05\" . 0))(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*ExpressionEntry10(Turbulent Length Scale)\" '(\"0.02\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)\"))(cx-gui-do cx-set-list-selections \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*DropDownList1(Specification Method)\" '( 1))(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*DropDownList1(Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*ExpressionEntry10(Turbulent Length Scale)\" '(\"0.02\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air3 (mass-flow-inlet, id=10)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air3 (mass-flow-inlet, id=10)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|air3 (mass-flow-inlet, id=10)\"))(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-set-list-selections \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*DropDownList1(Specification Method)\" '( 1))(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*DropDownList1(Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*ExpressionEntry10(Turbulent Length Scale)\" '(\"0.02\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame12*PushButton2(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-contour-1*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Reference Values"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Reference Values"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Reference Values\"))(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)\"))(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"0.3754875\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)\"))(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*ExpressionEntry9(Turbulent Intensity)\" '(\"0.05\" . 0))(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*ExpressionEntry10(Turbulent Length Scale)\" '(\"0.02\" . 0))(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"0.510663\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air3 (mass-flow-inlet, id=10)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air3 (mass-flow-inlet, id=10)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|air3 (mass-flow-inlet, id=10)\"))(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"0.220875\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)\"))(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"0.02259235714\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)" 100)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)")')
meshComponent1.Update(AllDependencies=True)
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(Precision="Single", EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='(%py-exec "preferences.fixState()")')
setup1.SendCommand(Command="(%py-exec \"preferences.setState({r'Appearance': None,r'GPUApp': None,r'General': None,r'Graphics': None,r'MatProApp': None,r'MeshingWorkflow': None,r'Navigation': None,r'PrjApp': None,r'Simulation': None,r'TurboWorkflow': None,})\")")
setup1.SendCommand(Command='/file/set-tui-version "22.1"(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Mesh Display*fl_mesh_svg_graphics_toolbar")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton1(OK)")(cx-gui-do cx-enable-apply-button "Mass-Flow Inlet")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air2 (mass-flow-inlet, id=9)"))(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton1(OK)")(cx-gui-do cx-enable-apply-button "Mass-Flow Inlet")(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 1)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air1 (mass-flow-inlet, id=28)"))(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton1(OK)")(cx-gui-do cx-enable-apply-button "Mass-Flow Inlet")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air3 (mass-flow-inlet, id=10)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air3 (mass-flow-inlet, id=10)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|air3 (mass-flow-inlet, id=10)\"))(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 6)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 7)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 8)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-set-list-selections \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList15(Direction Specification Method)\" '( 1))(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList15(Direction Specification Method)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)\"))(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 6)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 7)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 8)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-set-list-selections \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList15(Direction Specification Method)\" '( 1))(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList15(Direction Specification Method)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Initialization\"))(cx-gui-do cx-set-toggle-button2 \"Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Standard Initialization\" #t)(cx-gui-do cx-activate-item \"Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Standard Initialization\")(cx-gui-do cx-set-list-selections \"Solution Initialization*Table1*DropDownList1(Compute from)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*DropDownList1(Compute from)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame9*PushButton1(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Vectors"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-contour-1*Display")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
Save(Overwrite=True)
Open(FilePath="C:/Users/Szop/Desktop/mkws/Komora.wbpj")
