# encoding: utf-8
# 2022 R1
SetScriptVersion(Version="22.1.217")
template1 = GetTemplate(TemplateName="FLUENT")
system1 = template1.CreateSystem()
template2 = GetTemplate(TemplateName="FLTG")
system2 = template2.CreateSystem(
    Position="Right",
    RelativeTo=system1)
system1.Delete()
system2.Delete()
template3 = GetTemplate(TemplateName="Fluid Flow")
system3 = template3.CreateSystem()
geometry1 = system3.GetContainer(ComponentName="Geometry")
geometry1.Edit(IsSpaceClaimGeometry=True)
Save(Overwrite=True)
meshComponent1 = system3.GetComponent(Name="Mesh")
meshComponent1.Refresh()
mesh1 = system3.GetContainer(ComponentName="Mesh")
mesh1.Edit()
meshComponent1.Update(AllDependencies=True)
setupComponent1 = system3.GetComponent(Name="Setup")
setupComponent1.Refresh()
setup1 = system3.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(Precision="Double", EnvPath={}, RunParallel=True, NumberOfProcessorsMeshing=3, NumberOfProcessors=3, NumberOfGPGPUs=1))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='(%py-exec "preferences.fixState()")')
setup1.SendCommand(Command="(%py-exec \"preferences.setState({r'Appearance': None,r'GPUApp': None,r'General': None,r'Graphics': None,r'MatProApp': None,r'MeshingWorkflow': None,r'Navigation': None,r'PrjApp': None,r'Simulation': None,r'TurboWorkflow': None,})\")")
setup1.SendCommand(Command='/file/set-tui-version "22.1"(cx-gui-do cx-activate-item "Key Behavioral Changes*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(%py-exec "preferences.General.KeyBehavioralChangesMessage.setState(True)")')
setup1.SendCommand(Command="""(cx-use-window-id 51)(cx-set-camera '(0.127841 0.070622 0.641225) '(0.127841 0.070622 1.50162e-08) '(-0.0211835 0.999776 3.28873e-09) 0.181366 0.181366 \"perspective\")
(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera 0.000391081 0.00247245 0)(cx-use-window-id 51)(dolly-camera -0.0251374 -0.00803782 0)(cx-use-window-id 51)(handle-key \"??\")(cx-use-window-id 51)(cx-set-camera '(0.127361 0.0555887 0.654113) '(0.127361 0.0555887 -1.90567e-05) '(1.10711e-07 1 4.36557e-09) 0.185016 0.185016 \"perspective\")
(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera 0.00641078 0.0264072 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera -0.00105177 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions\"))""")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*List2(Zone)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '())(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*List2(Zone)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '())(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*List2(Zone)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '())(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*List2(Zone)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '())(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '( 5))(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*Table3*Table4*ButtonBox1*PushButton3(Display Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 5))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 5 6))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 5 6 7))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '( 0))(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*Table3*Table4*ButtonBox1*PushButton1(Edit)")(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton3(Units)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 0))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 47))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 49))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Set Units*Frame3*List1(Units)\" '( 3))(cx-gui-do cx-activate-item \"Set Units*Frame3*List1(Units)\")(cx-gui-do cx-activate-item \"Set Units*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*Table3*DropDownList2(Type)\" '( 5))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*Table3*DropDownList2(Type)")(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)')
setup1.SendCommand(Command="(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"0.3575\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton1(OK)")(cx-gui-do cx-enable-apply-button "Mass-Flow Inlet")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '( 1))(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*Table3*DropDownList2(Type)\" '( 5))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*Table3*DropDownList2(Type)")(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)')
setup1.SendCommand(Command="(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"0.0072959\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))(cx-gui-do cx-set-toggle-button2 "Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Standard Initialization" #t)(cx-gui-do cx-activate-item "Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Standard Initialization")(cx-gui-do cx-set-toggle-button2 "Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Hybrid  Initialization" #t)(cx-gui-do cx-activate-item "Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Hybrid  Initialization")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame12*PushButton2(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Reference Values"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Reference Values"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Reference Values\"))(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Physics)*Table1*Table3(Models)*PushButton6(Species)")(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame3" 0)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame3" 1)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame3" 0)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame3" 2)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame3" 0)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 0)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 1)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 0)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 2)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 0)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 3)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 0)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 4)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 0)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 5)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 0)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 6)(cx-gui-do cx-activate-tab-index "Species Model*Table2*Frame4(PDF Table Creation)" 0)')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Species Model*Table1*ToggleBox1(Model)*Species Transport\" #t)(cx-gui-do cx-activate-item \"Species Model*Table1*ToggleBox1(Model)*Species Transport\")(cx-gui-do cx-set-toggle-button2 \"Species Model*Table1*Frame3(Reactions)*ToggleBox1*CheckButton1(Volumetric)\" #t)(cx-gui-do cx-activate-item \"Species Model*Table1*Frame3(Reactions)*ToggleBox1*CheckButton1(Volumetric)\")(cx-gui-do cx-set-toggle-button2 \"Species Model*Table2*Frame5(Turbulence-Chemistry Interaction)*ToggleBox1*Eddy-Dissipation\" #t)(cx-gui-do cx-activate-item \"Species Model*Table2*Frame5(Turbulence-Chemistry Interaction)*ToggleBox1*Eddy-Dissipation\")(cx-gui-do cx-set-list-selections \"Species Model*Table2*Table1(Mixture Properties)*DropDownList2(Mixture Material)\" '( 24))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*Table2*Table1(Mixture Properties)*DropDownList2(Mixture Material)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air_inlet (mass-flow-inlet, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air_inlet (mass-flow-inlet, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|air_inlet (mass-flow-inlet, id=7)\"))(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 1)(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame2(Thermal)*Table1*Table1*ExpressionEntry1(Total Temperature)\" '(\"600\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 3)(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame4(Species)*Table1*Table2(Species Mass Fractions)*Table2*ExpressionEntry1(o2)\" '(\"0.23\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)\"))(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 3)(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame4(Species)*Table1*Table2(Species Mass Fractions)*Table1*ExpressionEntry1(ch4)\" '(\"1\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame12*PushButton2(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Reference Values"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Reference Values"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Reference Values\"))(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Controls"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Controls"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Models"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Models"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Models\"))(cx-gui-do cx-set-list-selections \"Models*Table1*List1(Models)\" '( 2))(cx-gui-do cx-activate-item \"Models*Table1*List1(Models)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Table1*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Viscous Model*Table1*ToggleBox1(Model)*k-epsilon (2 eqn)" #t)(cx-gui-do cx-activate-item "Viscous Model*Table1*ToggleBox1(Model)*k-epsilon (2 eqn)")(cx-gui-do cx-activate-item "Viscous Model*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air_inlet (mass-flow-inlet, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air_inlet (mass-flow-inlet, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|air_inlet (mass-flow-inlet, id=7)\"))(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-set-list-selections \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*DropDownList1(Specification Method)\" '( 1))(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*DropDownList1(Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*ExpressionEntry9(Turbulent Intensity)\" '(\"0.05\" . 0))(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*ExpressionEntry10(Turbulent Length Scale)\" '(\"0.02\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)\"))(cx-gui-do cx-activate-tab-index \"Mass-Flow Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*ExpressionEntry12(Turbulent Viscosity Ratio)\" '(\"10\" . 0))(cx-gui-do cx-set-list-selections \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*DropDownList1(Specification Method)\" '( 1))(cx-gui-do cx-enable-apply-button \"Mass-Flow Inlet\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*DropDownList1(Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Mass-Flow Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table3(Turbulence)*ExpressionEntry10(Turbulent Length Scale)\" '(\"0.004\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)" 1)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)")')
geometry1.Exit()
mesh1.Exit()
mesh1.Edit()
Save(Overwrite=True)
Save(Overwrite=True)
mesh1.Exit()
meshComponent1.Update(AllDependencies=True)
setupComponent1.Update(AllDependencies=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='(%py-exec "preferences.fixState()")')
setup1.SendCommand(Command="(%py-exec \"preferences.setState({r'Appearance': None,r'GPUApp': None,r'General': None,r'Graphics': None,r'MatProApp': None,r'MeshingWorkflow': None,r'Navigation': None,r'PrjApp': None,r'Simulation': None,r'TurboWorkflow': None,})\")")
setup1.SendCommand(Command='/file/set-tui-version "22.1"')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='(%py-exec "preferences.fixState()")')
setup1.SendCommand(Command="(%py-exec \"preferences.setState({r'Appearance': None,r'GPUApp': None,r'General': None,r'Graphics': None,r'MatProApp': None,r'MeshingWorkflow': None,r'Navigation': None,r'PrjApp': None,r'Simulation': None,r'TurboWorkflow': None,})\")")
setup1.SendCommand(Command='/file/set-tui-version "22.1"(cx-gui-do cx-activate-item "Key Behavioral Changes*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(%py-exec "preferences.General.KeyBehavioralChangesMessage.setState(True)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Models"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Models"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Models"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air_inlet (mass-flow-inlet, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air_inlet (mass-flow-inlet, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|air_inlet (mass-flow-inlet, id=7)"))(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|fuel_inlet (mass-flow-inlet, id=2)"))(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Mass-Flow Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Mass-Flow Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame12*PushButton2(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Reference Values"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Reference Values"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Reference Values\"))(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reference Values*DropDownList1(Compute from)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
Save(Overwrite=True)
